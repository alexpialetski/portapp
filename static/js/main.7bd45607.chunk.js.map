{"version":3,"sources":["constants/theme.ts","constants/app.ts","components/Copyright.tsx","components/AppBar.tsx","components/Drawer.tsx","components/Backdrop.tsx","components/SideMenuListItems.tsx","components/Dashboard.tsx","utils/free2ex.ts","utils/date.ts","utils/csv.ts","utils/messari.ts","utils/portfolio.ts","services/messari.ts","services/PortfolioManager/context.ts","services/PortfolioManager/usePortfolio.ts","services/PortfolioManager/index.tsx","components/PortfolioRoute.tsx","pages/Upload.tsx","components/Loader.tsx","components/ChartByAsset.tsx","utils/chart.ts","pages/Portfolio.tsx","pages/Assets.tsx","App.tsx","index.tsx"],"names":["theme","createTheme","PAGE_SLUG","Copyright","props","Box","sx","margin","flex","Typography","variant","color","align","Link","href","Date","getFullYear","AppBar","styled","MuiAppBar","shouldForwardProp","prop","open","drawerWidth","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","Drawer","MuiDrawer","position","whiteSpace","breakpoints","down","height","appBar","overflowX","spacing","up","Backdrop","backgroundColor","animation","opacity","from","to","LINKS","path","text","Icon","SideMenuListItems","history","useHistory","location","useLocation","onButtonClick","useCallback","push","isLinkActive","pathname","includes","List","map","ListItemButton","onClick","selected","ListItemIcon","ListItemText","primary","mdTheme","Main","palette","mode","grey","flexGrow","overflow","display","flexDirection","MobileBackdrop","Dashboard","children","useTheme","useState","window","innerWidth","values","md","setOpen","toggleDrawer","currentPageName","find","link","ThemeProvider","CssBaseline","Toolbar","IconButton","edge","marginRight","component","noWrap","alignItems","justifyContent","px","Divider","Container","maxWidth","mt","mb","padding","isFree2exAssetOperation","data","length","resetDateToStart","date","setUTCHours","getTimestampsFromStart","startDate","endDate","start","now","result","getDaysBefore","number","d","setDate","getDate","parseFree2exPortfolio","csv","operations","lastAssetRecord","dates","Object","keys","sort","a","b","Number","groupedPortfolio","i","reduce","acc","assetOperation","symbol","volume","parseGroupedPortfolioOperations","filter","free2exOperation","operationDate","split","asset","trim","asset1","asset2","parseFloat","groupTimeseries","timeSeries","series","price","groupedWithPrice","innerAcc","combinePortfolioAndSeries","portfolio","portfolioDates","portfolioDate","currentDate","findClosestAndLessDate","portfolioDateVolume","seriesDateVolume","portfolioBySeries","assetPriceByDate","portfolioVolume","assetPrice","TOTAL","getAssetsForPeriod","assets","queryParams","Promise","all","resolve","status","elapsed","timestamp","id","name","slug","getTime","fetch","URLSearchParams","toString","then","res","json","getAssetTimeseries","PortfolioManagerContext","createContext","setPortfolio","usePortfolioManager","useContext","LCPortfolio","lcText","localStorage","getItem","this","JSON","parse","setItem","stringify","PortfolioManager","getFromStorage","portfolioAssetDayPrice","setPortfolioAssetDayPrice","uniqueAssets","setUniqueAssets","useEffect","put","getUniqueAssets","columns","interval","assetSeries","Provider","value","PortfolioRoute","rest","Upload","styles","dropzone","onSubmit","files","file","content","Papa","record","Boolean","Array","isArray","isFree2exCSV","p","remove","accept","multiple","Loader","CircularProgress","ChartByAsset","chartSeries","useMemo","label","getChartByAsset","primaryAxis","getValue","datum","secondaryAxes","options","Portfolio","Assets","Grid","container","item","xs","minHeight","App","basename","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bd45607.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material\";\n\nexport const theme = createTheme({});\n","import { PageSlug } from \"types/app\";\n\nexport const PAGE_SLUG: Record<PageSlug, PageSlug> = {\n  assets: \"assets\",\n  portfolio: \"portfolio\",\n  upload: \"upload\",\n};\n","import React from \"react\";\nimport Typography, { TypographyProps } from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Link from \"@mui/material/Link\";\n\nexport const Copyright: React.FC<TypographyProps> = (props) => (\n  <Box sx={{ margin: \"8px 0\", flex: \"0 1 auto\" }}>\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  </Box>\n);\n","import { styled } from \"@mui/material/styles\";\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from \"@mui/material/AppBar\";\n\nexport type AppBarProps = MuiAppBarProps & {\n  open?: boolean;\n  drawerWidth: number;\n};\n\nexport const AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\" && prop !== \"drawerWidth\",\n})<AppBarProps>(({ theme, open, drawerWidth }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n","import { styled } from \"@mui/material/styles\";\nimport MuiDrawer, { DrawerProps as MuiDrawerProps } from \"@mui/material/Drawer\";\n\nexport type DrawerProps = MuiDrawerProps & {\n  open?: boolean;\n  drawerWidth: number;\n};\n\nexport const Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\" && prop !== \"drawerWidth\",\n})<DrawerProps>(({ theme, open, drawerWidth }) => ({\n  zIndex: theme.zIndex.drawer,\n\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    [theme.breakpoints.down(\"sm\")]: {\n      position: \"absolute\",\n      height: \"100%\",\n      zIndex: theme.zIndex.appBar,\n    },\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    }),\n  },\n}));\n","import { styled } from \"@mui/material/styles\";\n\nexport const Backdrop = styled(\"div\")(({ theme }) => ({\n  zIndex: theme.zIndex.drawer - 1,\n  width: \"100vw\",\n  height: \"100vh\",\n  position: \"fixed\",\n  backgroundColor: \"black\",\n  animation: `fadeIn 500ms ease`,\n  opacity: 0.2,\n  \"@keyframes fadeIn\": {\n    from: {\n      opacity: 0,\n    },\n    to: {\n      opacity: 0.2,\n    },\n  },\n}));\n","import React, { useCallback } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport BusinessCenterIcon from \"@mui/icons-material/BusinessCenter\";\nimport UploadFileRoundedIcon from \"@mui/icons-material/UploadFileRounded\";\nimport PieChartIcon from \"@mui/icons-material/PieChart\";\nimport { PAGE_SLUG } from \"constants/app\";\n\nexport const LINKS: Array<{\n  path: string;\n  text: string;\n  Icon: React.ReactNode;\n}> = [\n  {\n    path: `/${PAGE_SLUG.upload}`,\n    text: \"Upload\",\n    Icon: <UploadFileRoundedIcon />,\n  },\n  {\n    path: `/${PAGE_SLUG.portfolio}`,\n    text: \"Portfolio\",\n    Icon: <BusinessCenterIcon />,\n  },\n  {\n    path: `/${PAGE_SLUG.assets}`,\n    text: \"Asset\",\n    Icon: <PieChartIcon />,\n  },\n];\n\nexport const SideMenuListItems: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const onButtonClick = useCallback(\n    (path: string) => () => {\n      history.push(path);\n    },\n    [history]\n  );\n  const isLinkActive = (path: string) => location.pathname.includes(path);\n\n  return (\n    <List>\n      {LINKS.map(({ Icon, text, path }) => (\n        <ListItemButton\n          key={path}\n          onClick={onButtonClick(path)}\n          selected={isLinkActive(path)}\n        >\n          <ListItemIcon>{Icon}</ListItemIcon>\n          <ListItemText primary={text} />\n        </ListItemButton>\n      ))}\n    </List>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Container from \"@mui/material/Container\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport { styled, useTheme } from \"@mui/material/styles\";\n\nimport { Copyright } from \"./Copyright\";\nimport { AppBar } from \"./AppBar\";\nimport { Drawer } from \"./Drawer\";\nimport { Backdrop } from \"./Backdrop\";\nimport { SideMenuListItems, LINKS } from \"./SideMenuListItems\";\n\nconst drawerWidth = 240;\n\nconst mdTheme = createTheme();\n\nconst Main = styled(\"main\")(({ theme }) => ({\n  backgroundColor:\n    theme.palette.mode === \"light\"\n      ? theme.palette.grey[100]\n      : theme.palette.grey[900],\n  flexGrow: 1,\n  height: \"100vh\",\n  overflow: \"auto\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  [theme.breakpoints.down(\"sm\")]: {\n    marginLeft: theme.spacing(7),\n    width: `calc(100% - ${theme.spacing(7)}px)`,\n  },\n}));\n\nconst MobileBackdrop = styled(Backdrop)(({ theme }) => ({\n  [theme.breakpoints.up(\"sm\")]: {\n    display: \"none\",\n  },\n}));\n\nexport const Dashboard: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const location = useLocation();\n  const theme = useTheme();\n  const [open, setOpen] = useState(\n    window.innerWidth > theme.breakpoints.values.md\n  );\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n  const currentPageName = LINKS.find((link) =>\n    location.pathname.includes(link.path)\n  )?.text;\n\n  return (\n    <ThemeProvider theme={mdTheme}>\n      <Box sx={{ display: \"flex\" }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={open} drawerWidth={drawerWidth}>\n          <Toolbar variant=\"dense\">\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer}\n              sx={{\n                marginRight: \"36px\",\n                ...(open && { display: \"none\" }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              {currentPageName}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open} drawerWidth={drawerWidth}>\n          <Toolbar\n            variant=\"dense\"\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              px: [1],\n            }}\n          >\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Toolbar>\n          <Divider />\n          <SideMenuListItems />\n        </Drawer>\n        {open && <MobileBackdrop onClick={toggleDrawer} />}\n        <Main>\n          <Toolbar sx={{ flex: \"0 1 auto\" }} />\n          <Container\n            maxWidth=\"lg\"\n            sx={{ mt: 4, mb: 4, flexGrow: 1, padding: \"0 !important\" }}\n          >\n            {children}\n          </Container>\n          <Copyright />\n        </Main>\n      </Box>\n    </ThemeProvider>\n  );\n};\n","import { Free2exAssetOperation, Free2exCSV } from \"types/free2ex\";\n\nexport const isFree2exAssetOperation = (\n  data: unknown\n): data is Free2exAssetOperation => (data as Free2exAssetOperation).length > 22;\n\nexport const isFree2exCSV = (csv: Array<unknown>): csv is Free2exCSV =>\n  !!csv.find((record) =>\n    Boolean(\n      Array.isArray(record) &&\n        record.length === 2 &&\n        record[0] === \"Broker:\" &&\n        record[1] === \"Free2ex (free2ex.com)\"\n    )\n  );\n","export const resetDateToStart = (date: number): number =>\n  new Date(date).setUTCHours(0, 0, 0, 0);\n\nexport const findClosestAndLessDate = (\n  date: number,\n  dates: number[]\n): number => {\n  let result = 0;\n\n  for (const currentDate of dates) {\n    if (currentDate <= date && currentDate > result) {\n      result = currentDate;\n    }\n  }\n\n  return result;\n};\n\nexport const getTimestampsFromStart = (\n  startDate: number,\n  endDate: number\n): number[] => {\n  const start = resetDateToStart(startDate);\n  const now = resetDateToStart(endDate);\n  const oneDay = 86400000;\n  const result = [start];\n\n  while (result[result.length - 1] < now) {\n    result.push(result[result.length - 1] + oneDay);\n  }\n\n  return result;\n};\n\nexport const getDaysBefore = (date: number, number: number): number => {\n  const d = new Date(date);\n  return d.setDate(d.getDate() - number);\n};\n","import {\n  AssetRecord,\n  GroupedPortfolio,\n  GroupedPortfolioOperation,\n} from \"types/portfolio\";\nimport { Free2exCSV, Free2exType } from \"types/free2ex\";\nimport { AssetSymbol } from \"types/asset\";\n\nimport { isFree2exAssetOperation } from \"./free2ex\";\nimport { resetDateToStart } from \"./date\";\n\nexport const parseGroupedPortfolioOperations = (\n  operations: GroupedPortfolioOperation\n): GroupedPortfolio => {\n  const dates = Object.keys(operations).sort((a, b) => Number(a) - Number(b));\n  const groupedPortfolio: GroupedPortfolio = {};\n  let lastAssetRecord: AssetRecord;\n\n  for (let i = 0; i < dates.length; i++) {\n    lastAssetRecord = { ...(groupedPortfolio[dates[i - 1]] || {}) };\n\n    groupedPortfolio[dates[i]] = operations[dates[i]].reduce<AssetRecord>(\n      (acc, assetOperation) => {\n        if (acc[assetOperation.symbol]) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          acc[assetOperation.symbol]! += assetOperation.volume;\n        } else {\n          acc[assetOperation.symbol] = assetOperation.volume;\n        }\n\n        return acc;\n      },\n      lastAssetRecord\n    );\n  }\n\n  return groupedPortfolio;\n};\n\nexport const parseFree2exPortfolio = (csv: Free2exCSV): GroupedPortfolio =>\n  parseGroupedPortfolioOperations(\n    csv\n      .filter(isFree2exAssetOperation)\n      .reduce<GroupedPortfolioOperation>((acc, free2exOperation) => {\n        const operationDate = resetDateToStart(+new Date(free2exOperation[1]));\n        const operations = acc[operationDate] || [];\n\n        if (\n          ([\"BUY Market\", \"SELL Market\"] as Free2exType[]).includes(\n            free2exOperation[2]\n          )\n        ) {\n          const [asset1, asset2] = free2exOperation[5]\n            .split(\"/\")\n            .map((asset) => asset.trim()) as [AssetSymbol, AssetSymbol];\n\n          operations.push({\n            symbol: asset1,\n            volume: parseFloat(free2exOperation[19]),\n          });\n          operations.push({\n            symbol: asset2,\n            volume: parseFloat(free2exOperation[20]),\n          });\n        } else {\n          operations.push({\n            symbol: free2exOperation[5] as AssetSymbol,\n            volume: parseFloat(free2exOperation[19]),\n          });\n        }\n\n        return { ...acc, [operationDate]: operations };\n      }, {})\n  );\n","import { AssetSymbol } from \"types/asset\";\nimport { AssetTimeseriesResponse, GroupedSeries } from \"types/messari\";\n\ntype GroupByDateWithPrice = Record<\n  string,\n  { price: number; symbol: AssetSymbol }\n>;\n\nexport const groupTimeseries = (\n  timeSeries: AssetTimeseriesResponse[]\n): GroupedSeries =>\n  timeSeries\n    .map((series) =>\n      series.data.values.reduce<GroupByDateWithPrice>(\n        (acc, [date, price]) => ({\n          ...acc,\n          [date]: { price, symbol: series.data.symbol },\n        }),\n        {}\n      )\n    )\n    .reduce<GroupedSeries>((acc, groupedWithPrice) => {\n      const dates = Object.keys(groupedWithPrice);\n\n      return dates.reduce<GroupedSeries>(\n        (innerAcc, date) => ({\n          ...innerAcc,\n          [date]: {\n            ...innerAcc[date],\n            [groupedWithPrice[date].symbol]: groupedWithPrice[date].price,\n          },\n        }),\n        acc\n      );\n    }, {});\n","import {\n  GroupedSeries,\n  AssetSymbol,\n  GroupedPortfolio,\n  PortfolioAssetDayPrice,\n  AssetRecordWithTotal,\n} from \"types\";\nimport { findClosestAndLessDate } from \"utils\";\n\nexport const getUniqueAssets = (portfolio: GroupedPortfolio): AssetSymbol[] =>\n  Object.keys(portfolio).reduce<AssetSymbol[]>((acc, date) => {\n    if (acc.length < Object.keys(portfolio[date]).length) {\n      return Object.keys(portfolio[date]) as AssetSymbol[];\n    }\n\n    return acc;\n  }, []);\n\nexport const combinePortfolioAndSeries = (\n  portfolio: GroupedPortfolio,\n  series: GroupedSeries\n): PortfolioAssetDayPrice => {\n  const portfolioDates = Object.keys(portfolio).map(Number);\n\n  return Object.keys(series).reduce<PortfolioAssetDayPrice>((acc, date) => {\n    const portfolioDate = findClosestAndLessDate(Number(date), portfolioDates);\n    const portfolioDateVolume = portfolio[portfolioDate] || {};\n    const seriesDateVolume = series[date] || {};\n\n    const portfolioBySeries = (\n      Object.keys(seriesDateVolume) as AssetSymbol[]\n    ).reduce<AssetRecordWithTotal>(\n      (innerAcc, symbol) => {\n        const assetPriceByDate = seriesDateVolume[symbol] || 0;\n        const portfolioVolume = portfolioDateVolume[symbol] || 0;\n        const assetPrice = portfolioVolume * assetPriceByDate;\n\n        return {\n          ...innerAcc,\n          [symbol]: portfolioVolume * assetPriceByDate,\n          TOTAL: innerAcc.TOTAL + assetPrice,\n        };\n      },\n      { TOTAL: 0 }\n    );\n\n    return {\n      ...acc,\n      [date]: portfolioBySeries,\n    };\n  }, {});\n};\n","import {\n  AssetTimeseriesQueryParams,\n  AssetTimeseriesResponse,\n  AssetSymbol,\n} from \"types\";\nimport { getDaysBefore, getTimestampsFromStart, resetDateToStart } from \"utils\";\n\nexport const getAssetTimeseries = (\n  asset: AssetSymbol,\n  queryParams: AssetTimeseriesQueryParams\n): Promise<AssetTimeseriesResponse> =>\n  fetch(\n    `https://data.messari.io/api/v1/assets/${asset}/metrics/price/time-series?${new URLSearchParams(\n      queryParams\n    ).toString()}`\n  ).then((res) => res.json());\n\nexport const getUSDTimeseries = (\n  start?: string\n): Promise<AssetTimeseriesResponse> =>\n  Promise.resolve<AssetTimeseriesResponse>({\n    status: { elapsed: 0, timestamp: \"0\" },\n    data: {\n      id: \"usd_id\",\n      name: \"USD\",\n      slug: \"usd\",\n      symbol: \"USD\",\n      values: getTimestampsFromStart(\n        Number(start),\n        getDaysBefore(resetDateToStart(new Date().getTime()), 1)\n      ).map((date) => [date, 1]),\n    },\n  });\n\nexport const getAssetsForPeriod = (\n  assets: AssetSymbol[],\n  queryParams: AssetTimeseriesQueryParams\n): Promise<AssetTimeseriesResponse[]> =>\n  Promise.all(\n    assets.map((asset) => {\n      if (asset === \"USD\") {\n        return getUSDTimeseries(queryParams.start);\n      }\n\n      return getAssetTimeseries(asset, queryParams);\n    })\n  );\n","import { createContext } from \"react\";\n\nimport { PortfolioManagerState } from \"./types\";\n\nexport const PortfolioManagerContext = createContext<PortfolioManagerState>({\n  setPortfolio: () => {},\n});\n","import { useContext } from \"react\";\n\nimport { PortfolioManagerContext } from \"./context\";\nimport { PortfolioManagerState } from \"./types\";\n\nexport const usePortfolioManager = (): PortfolioManagerState =>\n  useContext(PortfolioManagerContext);\n","import React, { useEffect, useState } from \"react\";\n\nimport { AssetSymbol, GroupedPortfolio, PortfolioAssetDayPrice } from \"types\";\nimport {\n  getUniqueAssets,\n  groupTimeseries,\n  combinePortfolioAndSeries,\n} from \"utils\";\nimport { getAssetsForPeriod } from \"services/messari\";\n\nimport { PortfolioManagerContext } from \"./context\";\n\nclass LCPortfolio {\n  static #PORTFOLIO_LC_KEY = \"PORTFOLIO_LC_KEY\";\n\n  static getFromStorage(): GroupedPortfolio | undefined {\n    const lcText = localStorage.getItem(this.#PORTFOLIO_LC_KEY);\n\n    if (!lcText) return undefined;\n\n    try {\n      return JSON.parse(lcText);\n    } catch {\n      return undefined;\n    }\n  }\n\n  static put(portfolio: GroupedPortfolio): void {\n    localStorage.setItem(this.#PORTFOLIO_LC_KEY, JSON.stringify(portfolio));\n  }\n}\n\nexport const PortfolioManager: React.FC = ({ children }) => {\n  const [portfolio, setPortfolio] = useState<GroupedPortfolio | undefined>(\n    LCPortfolio.getFromStorage()\n  );\n  const [portfolioAssetDayPrice, setPortfolioAssetDayPrice] =\n    useState<PortfolioAssetDayPrice>();\n  const [uniqueAssets, setUniqueAssets] = useState<AssetSymbol[]>();\n\n  useEffect(() => portfolio && LCPortfolio.put(portfolio), [portfolio]);\n\n  useEffect(() => {\n    if (portfolio) {\n      const assets = getUniqueAssets(portfolio);\n      const startDate = Object.keys(portfolio)[0];\n\n      setUniqueAssets(assets);\n\n      getAssetsForPeriod(assets, {\n        start: startDate,\n        columns: \"close\",\n        interval: \"1d\",\n      })\n        .then(groupTimeseries)\n        .then((assetSeries) =>\n          combinePortfolioAndSeries(portfolio, assetSeries)\n        )\n        .then(setPortfolioAssetDayPrice);\n    }\n  }, [portfolio]);\n\n  return (\n    <PortfolioManagerContext.Provider\n      value={{\n        portfolio,\n        portfolioAssetDayPrice,\n        uniqueAssets,\n        setPortfolio,\n      }}\n    >\n      {children}\n    </PortfolioManagerContext.Provider>\n  );\n};\n\nexport { usePortfolioManager } from \"./usePortfolio\";\n","import React from \"react\";\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\n\nimport { usePortfolioManager } from \"services/PortfolioManager\";\nimport { PAGE_SLUG } from \"constants/app\";\n\nexport const PortfolioRoute: React.FC<RouteProps> = ({ children, ...rest }) => {\n  const { portfolio } = usePortfolioManager();\n\n  if (!portfolio) {\n    return <Redirect to={`/${PAGE_SLUG.upload}`} />;\n  }\n\n  return <Route {...rest}>{children}</Route>;\n};\n","import React from \"react\";\nimport Papa from \"papaparse\";\nimport Dropzone, { IDropzoneProps } from \"react-dropzone-uploader\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { parseFree2exPortfolio } from \"utils/csv\";\nimport { usePortfolioManager } from \"services/PortfolioManager\";\nimport { isFree2exCSV } from \"utils\";\n\nimport \"react-dropzone-uploader/dist/styles.css\";\n\nexport const Upload: React.FC = () => {\n  const { setPortfolio } = usePortfolioManager();\n  const history = useHistory();\n\n  const handleSubmit: IDropzoneProps[\"onSubmit\"] = (files) => {\n    if (files.length) {\n      files[0].file\n        .text()\n        .then((content) => Papa.parse(content).data)\n        .then((csv) => {\n          if (isFree2exCSV(csv)) {\n            return parseFree2exPortfolio(csv);\n          }\n\n          return;\n        })\n        .then((p) => {\n          if (p) {\n            setPortfolio(p);\n            history.push(\"/\");\n          } else {\n            files[0].remove();\n          }\n        });\n    }\n  };\n\n  return (\n    <Dropzone\n      styles={{ dropzone: { overflow: \"hidden\", height: \"100%\" } }}\n      onSubmit={handleSubmit}\n      accept=\".csv\"\n      multiple={false}\n    />\n  );\n};\n","import React from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Box from \"@mui/material/Box\";\n\nexport const Loader: React.FC = () => (\n  <Box\n    sx={{\n      display: \"flex\",\n      height: \"100%\",\n      width: \"100%\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <CircularProgress />\n  </Box>\n);\n","import React, { useMemo } from \"react\";\nimport { Chart, AxisOptions } from \"react-charts\";\n\nimport { DailyAssetPrice, Series } from \"types/chart\";\nimport { getChartByAsset } from \"utils/chart\";\nimport { PortfolioAssetDayPrice, PortfolioAssetSymbol } from \"types\";\n\nexport type ChartByAssetProps = {\n  asset: PortfolioAssetSymbol;\n  portfolioAssetDayPrice: PortfolioAssetDayPrice;\n};\n\nexport const ChartByAsset: React.FC<ChartByAssetProps> = ({\n  portfolioAssetDayPrice,\n  asset,\n}) => {\n  const chartSeries = useMemo<Series>(\n    () => getChartByAsset(asset, portfolioAssetDayPrice),\n    [portfolioAssetDayPrice, asset]\n  );\n\n  const primaryAxis = useMemo(\n    (): AxisOptions<DailyAssetPrice> => ({\n      getValue: (datum) => datum.date,\n    }),\n    []\n  );\n\n  const secondaryAxes = useMemo(\n    (): AxisOptions<DailyAssetPrice>[] => [\n      {\n        getValue: (datum) => datum.price,\n      },\n    ],\n    []\n  );\n\n  return (\n    <Chart\n      options={{\n        data: [chartSeries],\n        primaryAxis,\n        secondaryAxes,\n      }}\n    />\n  );\n};\n","import {\n  Series,\n  DailyAssetPrice,\n  PortfolioAssetDayPrice,\n  PortfolioAssetSymbol,\n} from \"types\";\n\nexport const getChartByAsset = (\n  asset: PortfolioAssetSymbol,\n  portfolioAssetDayPrice: PortfolioAssetDayPrice\n): Series => {\n  const data = Object.keys(portfolioAssetDayPrice).map<DailyAssetPrice>(\n    (date) => ({\n      date: new Date(Number(date)),\n      price: portfolioAssetDayPrice[date][asset] || 0,\n    })\n  );\n\n  return {\n    label: asset,\n    data,\n  };\n};\n","import React from \"react\";\n\nimport { usePortfolioManager } from \"services/PortfolioManager\";\nimport { Loader } from \"components/Loader\";\nimport { ChartByAsset } from \"components/ChartByAsset\";\n\nexport const Portfolio: React.FC = () => {\n  const { portfolioAssetDayPrice } = usePortfolioManager();\n\n  if (!portfolioAssetDayPrice) {\n    return <Loader />;\n  }\n\n  return (\n    <ChartByAsset\n      asset=\"TOTAL\"\n      portfolioAssetDayPrice={portfolioAssetDayPrice}\n    />\n  );\n};\n","import React from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\n\nimport { usePortfolioManager } from \"services/PortfolioManager\";\nimport { Loader } from \"components/Loader\";\nimport { ChartByAsset } from \"components/ChartByAsset\";\n\nexport const Assets: React.FC = () => {\n  const { portfolioAssetDayPrice, uniqueAssets } = usePortfolioManager();\n\n  if (!portfolioAssetDayPrice || !uniqueAssets) {\n    return <Loader />;\n  }\n\n  return (\n    <Grid container height=\"100%\">\n      {uniqueAssets.map((asset) => (\n        <Grid key={asset} item md={6} xs={12} mb={5} minHeight={200}>\n          <Typography variant=\"h5\">{asset}</Typography>\n          <ChartByAsset\n            asset={asset}\n            portfolioAssetDayPrice={portfolioAssetDayPrice}\n          />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport { ThemeProvider } from \"@mui/material\";\nimport { Switch, Route, BrowserRouter, Redirect } from \"react-router-dom\";\n\nimport { theme } from \"constants/theme\";\nimport { PAGE_SLUG } from \"constants/app\";\nimport { Dashboard } from \"components/Dashboard\";\nimport { PortfolioRoute } from \"components/PortfolioRoute\";\nimport { PortfolioManager } from \"services/PortfolioManager\";\nimport { Upload, Portfolio, Assets } from \"pages\";\n\nexport const App: React.FC = () => (\n  <BrowserRouter basename=\"/portapp\">\n    <ThemeProvider theme={theme}>\n      <PortfolioManager>\n        <Dashboard>\n          <Switch>\n            <Route exact path={`/${PAGE_SLUG.upload}`}>\n              <Upload />\n            </Route>\n            <PortfolioRoute exact path={`/${PAGE_SLUG.portfolio}`}>\n              <Portfolio />\n            </PortfolioRoute>\n            <PortfolioRoute exact path={`/${PAGE_SLUG.assets}`}>\n              <Assets />\n            </PortfolioRoute>\n            <Redirect to={`/${PAGE_SLUG.portfolio}`} />\n          </Switch>\n        </Dashboard>\n      </PortfolioManager>\n    </ThemeProvider>\n  </BrowserRouter>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}