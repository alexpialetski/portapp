{"version":3,"sources":["constants/theme.ts","constants/app.ts","components/AppBar.tsx","components/Drawer.tsx","components/Backdrop.tsx","components/SideMenuListItems.tsx","utils/chart.ts","utils/free2ex.ts","utils/date.ts","utils/csv/free2ex.ts","utils/csv/common.ts","utils/messari.ts","utils/portfolio.ts","services/messari.ts","services/PortfolioManager/context.ts","services/PortfolioManager/usePortfolio.ts","services/PortfolioManager/index.tsx","components/BarPortfolioStat.tsx","components/Dashboard.tsx","components/PortfolioRoute.tsx","pages/Upload.tsx","components/Loader.tsx","components/recharts/CustomTooltip.tsx","components/ChartByAsset.tsx","pages/Portfolio.tsx","pages/Assets.tsx","App.tsx","index.tsx"],"names":["theme","createTheme","PAGE_SLUG","AppBar","styled","MuiAppBar","shouldForwardProp","prop","open","drawerWidth","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","Drawer","MuiDrawer","position","whiteSpace","breakpoints","down","height","appBar","overflowX","spacing","up","Backdrop","backgroundColor","animation","opacity","from","to","LINKS","path","text","Icon","SideMenuListItems","history","useHistory","location","useLocation","onButtonClick","useCallback","push","isLinkActive","pathname","includes","List","map","ListItemButton","onClick","selected","ListItemIcon","ListItemText","primary","getChartByAsset","asset","portfolioAssetDayPrice","key","label","haveVolume","data","Object","keys","date","assetInfo","Number","price","volume","formatSeriesDate","Date","toLocaleDateString","year","month","day","formatSeriesNumber","num","toFixed","toString","formatSeriesFloat","isFree2exAssetOperation","length","resetDateToStart","setUTCHours","getTimestampsFromStart","startDate","endDate","start","now","result","getDaysBefore","number","d","setDate","getDate","parseFree2exPortfolio","csv","operations","lastAssetRecord","dates","sort","a","b","groupedPortfolio","i","reduce","acc","assetOperation","prevAssetInfo","symbol","investment","parseGroupedPortfolioOperations","filter","free2exOperation","operationDate","updatedOperations","split","trim","asset1","asset2","parseFloat","appendAssetOperations","slice","groupTimeseries","timeSeries","series","values","groupedWithPrice","innerAcc","combinePortfolioAndSeries","portfolio","portfolioDates","portfolioDate","currentDate","findClosestAndLessDate","portfolioDateVolume","seriesDateVolume","portfolioBySeries","assetPriceByDate","portfolioAssetInfo","assetPrice","usdInvestments","USD","totalPrice","TOTAL","getAssetsForPeriod","assets","queryParams","Promise","all","resolve","status","elapsed","timestamp","id","name","slug","getTime","fetch","URLSearchParams","then","res","json","getAssetTimeseries","PortfolioManagerContext","createContext","setPortfolio","usePortfolioManager","useContext","LCPortfolio","lcText","localStorage","getItem","this","JSON","parse","setItem","stringify","PortfolioManager","children","useState","getFromStorage","setPortfolioAssetDayPrice","uniqueAssets","setUniqueAssets","useEffect","put","getUniqueAssets","columns","interval","assetSeries","Provider","value","BarPortfolioStat","totalInfo","Typography","component","variant","color","noWrap","mdTheme","Main","palette","mode","grey","flexGrow","overflow","display","flexDirection","MobileBackdrop","StyledContainer","Container","padding","Dashboard","useTheme","window","innerWidth","md","setOpen","toggleDrawer","currentPageName","find","link","ThemeProvider","Box","sx","CssBaseline","Toolbar","justifyContent","alignItems","IconButton","edge","marginRight","px","Divider","flex","maxWidth","PortfolioRoute","rest","Upload","styles","dropzone","onSubmit","files","file","content","Papa","record","Boolean","Array","isArray","isFree2exCSV","p","remove","accept","multiple","Loader","CircularProgress","fontSize","background","borderRadius","textAlign","fontFamily","Table","TableRow","fontWeight","CircleContainer","Circle","stroke","fill","strokeWidth","marginBottom","CustomTooltip","active","payload","className","cx","cy","r","DOMAIN","COLOR_PALETTE","ChartByAsset","seriesKey","ResponsiveContainer","LineChart","margin","left","top","right","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","scale","type","tickFormatter","domain","YAxis","Tooltip","s","index","strokeColor","Line","Portfolio","chartSeries","useMemo","Assets","Grid","container","item","xs","mb","App","basename","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8a6860d.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material\";\n\nexport const theme = createTheme({});\n","import { PageSlug } from \"types/app\";\n\nexport const PAGE_SLUG: Record<PageSlug, PageSlug> = {\n  assets: \"assets\",\n  portfolio: \"portfolio\",\n  upload: \"upload\",\n};\n","import { styled } from \"@mui/material/styles\";\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from \"@mui/material/AppBar\";\n\nexport type AppBarProps = MuiAppBarProps & {\n  open?: boolean;\n  drawerWidth: number;\n};\n\nexport const AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\" && prop !== \"drawerWidth\",\n})<AppBarProps>(({ theme, open, drawerWidth }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n","import { styled } from \"@mui/material/styles\";\nimport MuiDrawer, { DrawerProps as MuiDrawerProps } from \"@mui/material/Drawer\";\n\nexport type DrawerProps = MuiDrawerProps & {\n  open?: boolean;\n  drawerWidth: number;\n};\n\nexport const Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\" && prop !== \"drawerWidth\",\n})<DrawerProps>(({ theme, open, drawerWidth }) => ({\n  zIndex: theme.zIndex.drawer,\n\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    [theme.breakpoints.down(\"sm\")]: {\n      position: \"absolute\",\n      height: \"100%\",\n      zIndex: theme.zIndex.appBar,\n    },\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    }),\n  },\n}));\n","import { styled } from \"@mui/material/styles\";\n\nexport const Backdrop = styled(\"div\")(({ theme }) => ({\n  zIndex: theme.zIndex.drawer - 1,\n  width: \"100vw\",\n  height: \"100vh\",\n  position: \"fixed\",\n  backgroundColor: \"black\",\n  animation: `fadeIn 500ms ease`,\n  opacity: 0.2,\n  \"@keyframes fadeIn\": {\n    from: {\n      opacity: 0,\n    },\n    to: {\n      opacity: 0.2,\n    },\n  },\n}));\n","import React, { useCallback } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport BusinessCenterIcon from \"@mui/icons-material/BusinessCenter\";\nimport UploadFileRoundedIcon from \"@mui/icons-material/UploadFileRounded\";\nimport PieChartIcon from \"@mui/icons-material/PieChart\";\nimport { PAGE_SLUG } from \"constants/app\";\n\nexport const LINKS: Array<{\n  path: string;\n  text: string;\n  Icon: React.ReactNode;\n}> = [\n  {\n    path: `/${PAGE_SLUG.upload}`,\n    text: \"Upload\",\n    Icon: <UploadFileRoundedIcon />,\n  },\n  {\n    path: `/${PAGE_SLUG.portfolio}`,\n    text: \"Portfolio\",\n    Icon: <BusinessCenterIcon />,\n  },\n  {\n    path: `/${PAGE_SLUG.assets}`,\n    text: \"Assets\",\n    Icon: <PieChartIcon />,\n  },\n];\n\nexport const SideMenuListItems: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const onButtonClick = useCallback(\n    (path: string) => () => {\n      history.push(path);\n    },\n    [history]\n  );\n  const isLinkActive = (path: string) => location.pathname.includes(path);\n\n  return (\n    <List>\n      {LINKS.map(({ Icon, text, path }) => (\n        <ListItemButton\n          key={path}\n          onClick={onButtonClick(path)}\n          selected={isLinkActive(path)}\n        >\n          <ListItemIcon>{Icon}</ListItemIcon>\n          <ListItemText primary={text} />\n        </ListItemButton>\n      ))}\n    </List>\n  );\n};\n","import {\n  Series,\n  DailyAssetPrice,\n  PortfolioAssetDayPrice,\n  PortfolioAssetSymbol,\n  AssetRecordMeta,\n} from \"types\";\n\nexport const getChartByAsset = (\n  asset: PortfolioAssetSymbol,\n  portfolioAssetDayPrice: PortfolioAssetDayPrice,\n  key: keyof AssetRecordMeta = \"price\",\n  label: string = asset,\n  haveVolume = true\n): Series => {\n  const data = Object.keys(portfolioAssetDayPrice).map<DailyAssetPrice>(\n    (date) => {\n      const assetInfo = portfolioAssetDayPrice[date][asset];\n\n      return {\n        date: Number(date),\n        price: (assetInfo && assetInfo[key]) || 0,\n        volume: (haveVolume && assetInfo?.volume) || 0,\n      };\n    }\n  );\n\n  return {\n    label,\n    data,\n  };\n};\n\nexport const formatSeriesDate = (date: number | string | Date): string =>\n  new Date(date).toLocaleDateString(\"en\", {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n  });\n\nexport const formatSeriesNumber = (num: number): string =>\n  Number(num.toFixed()).toString();\n\nexport const formatSeriesFloat = (num: number): string =>\n  Number(num.toFixed(3)).toString();\n","import { Free2exAssetOperation, Free2exCSV } from \"types/free2ex\";\n\nexport const isFree2exAssetOperation = (\n  data: unknown\n): data is Free2exAssetOperation => (data as Free2exAssetOperation).length > 22;\n\nexport const isFree2exCSV = (csv: Array<unknown>): csv is Free2exCSV =>\n  !!csv.find((record) =>\n    Boolean(\n      Array.isArray(record) &&\n        record.length === 2 &&\n        record[0] === \"Broker:\" &&\n        record[1] === \"Free2ex (free2ex.com)\"\n    )\n  );\n","export const resetDateToStart = (date: number): number =>\n  new Date(date).setUTCHours(0, 0, 0, 0);\n\nexport const findClosestAndLessDate = (\n  date: number,\n  dates: number[]\n): number => {\n  let result = 0;\n\n  for (const currentDate of dates) {\n    if (currentDate <= date && currentDate > result) {\n      result = currentDate;\n    }\n  }\n\n  return result;\n};\n\nexport const getTimestampsFromStart = (\n  startDate: number,\n  endDate: number\n): number[] => {\n  const start = resetDateToStart(startDate);\n  const now = resetDateToStart(endDate);\n  const oneDay = 86400000;\n  const result = [start];\n\n  while (result[result.length - 1] < now) {\n    result.push(result[result.length - 1] + oneDay);\n  }\n\n  return result;\n};\n\nexport const getDaysBefore = (date: number, number: number): number => {\n  const d = new Date(date);\n  return d.setDate(d.getDate() - number);\n};\n","import {\n  GroupedPortfolio,\n  GroupedPortfolioOperation,\n  PortfolioOperation,\n} from \"types/portfolio\";\nimport { Free2exCSV, Free2exAssetOperation } from \"types/free2ex\";\nimport { AssetSymbol } from \"types/asset\";\n\nimport { isFree2exAssetOperation } from \"../free2ex\";\nimport { resetDateToStart } from \"../date\";\nimport { parseGroupedPortfolioOperations } from \"./common\";\n\nexport const appendAssetOperations = (\n  operations: PortfolioOperation[],\n  free2exOperation: Free2exAssetOperation\n): PortfolioOperation[] => {\n  if (free2exOperation[2] === \"BUY Market\") {\n    const [asset1, asset2] = free2exOperation[5]\n      .split(\"/\")\n      .map((asset) => asset.trim()) as [AssetSymbol, AssetSymbol];\n\n    operations.push({\n      symbol: asset1,\n      volume: parseFloat(free2exOperation[19]),\n      investment: asset2 === \"USD\" ? parseFloat(free2exOperation[20]) * -1 : 0,\n    });\n    operations.push({\n      symbol: asset2,\n      volume: parseFloat(free2exOperation[20]),\n      investment: 0,\n    });\n  }\n\n  if (free2exOperation[2] === \"SELL Market\") {\n    const [asset1, asset2] = free2exOperation[5]\n      .split(\"/\")\n      .map((asset) => asset.trim()) as [AssetSymbol, AssetSymbol];\n\n    operations.push({\n      symbol: asset1,\n      volume: parseFloat(free2exOperation[19]),\n      investment: asset2 === \"USD\" ? parseFloat(free2exOperation[20]) : 0,\n    });\n    operations.push({\n      symbol: asset2,\n      volume: parseFloat(free2exOperation[20]),\n      investment: 0,\n    });\n  }\n\n  if (free2exOperation[2] === \"Deposit\") {\n    operations.push({\n      symbol: free2exOperation[5] as AssetSymbol,\n      volume: parseFloat(free2exOperation[19]),\n      investment: parseFloat(free2exOperation[19]),\n    });\n  }\n\n  return operations;\n};\n\nexport const parseFree2exPortfolio = (csv: Free2exCSV): GroupedPortfolio =>\n  parseGroupedPortfolioOperations(\n    csv\n      .filter(isFree2exAssetOperation)\n      .reduce<GroupedPortfolioOperation>((acc, free2exOperation) => {\n        const operationDate = resetDateToStart(+new Date(free2exOperation[1]));\n        const operations: PortfolioOperation[] = acc[operationDate] || [];\n        const updatedOperations = appendAssetOperations(\n          operations.slice(),\n          free2exOperation\n        );\n\n        return { ...acc, [operationDate]: updatedOperations };\n      }, {})\n  );\n","import {\n  AssetRecord,\n  GroupedPortfolio,\n  GroupedPortfolioOperation,\n} from \"types/portfolio\";\n\nexport const parseGroupedPortfolioOperations = (\n  operations: GroupedPortfolioOperation\n): GroupedPortfolio => {\n  const dates = Object.keys(operations).sort((a, b) => Number(a) - Number(b));\n  const groupedPortfolio: GroupedPortfolio = {};\n  let lastAssetRecord: AssetRecord;\n\n  for (let i = 0; i < dates.length; i++) {\n    lastAssetRecord = { ...(groupedPortfolio[dates[i - 1]] || {}) };\n\n    groupedPortfolio[dates[i]] = operations[dates[i]].reduce<AssetRecord>(\n      (acc, assetOperation) => {\n        const prevAssetInfo = acc[assetOperation.symbol];\n        if (prevAssetInfo) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          acc[assetOperation.symbol]! = {\n            ...prevAssetInfo,\n            investment: prevAssetInfo.investment + assetOperation.investment,\n            volume: prevAssetInfo.volume + assetOperation.volume,\n          };\n        } else {\n          acc[assetOperation.symbol] = {\n            volume: assetOperation.volume,\n            investment: assetOperation.investment,\n          };\n        }\n\n        return acc;\n      },\n      lastAssetRecord\n    );\n  }\n\n  return groupedPortfolio;\n};\n","import { AssetSymbol } from \"types/asset\";\nimport { AssetTimeseriesResponse, GroupedSeries } from \"types/messari\";\n\ntype GroupByDateWithPrice = Record<\n  string,\n  { price: number; symbol: AssetSymbol }\n>;\n\nexport const groupTimeseries = (\n  timeSeries: AssetTimeseriesResponse[]\n): GroupedSeries =>\n  timeSeries\n    .map((series) =>\n      series.data.values.reduce<GroupByDateWithPrice>(\n        (acc, [date, price]) => ({\n          ...acc,\n          [date]: { price, symbol: series.data.symbol },\n        }),\n        {}\n      )\n    )\n    .reduce<GroupedSeries>((acc, groupedWithPrice) => {\n      const dates = Object.keys(groupedWithPrice);\n\n      return dates.reduce<GroupedSeries>(\n        (innerAcc, date) => ({\n          ...innerAcc,\n          [date]: {\n            ...innerAcc[date],\n            [groupedWithPrice[date].symbol]: groupedWithPrice[date].price,\n          },\n        }),\n        acc\n      );\n    }, {});\n","import {\n  GroupedSeries,\n  AssetSymbol,\n  GroupedPortfolio,\n  PortfolioAssetDayPrice,\n  AssetRecordWithTotal,\n} from \"types\";\nimport { findClosestAndLessDate } from \"utils\";\n\nexport const getUniqueAssets = (portfolio: GroupedPortfolio): AssetSymbol[] =>\n  Object.keys(portfolio).reduce<AssetSymbol[]>((acc, date) => {\n    if (acc.length < Object.keys(portfolio[date]).length) {\n      return Object.keys(portfolio[date]) as AssetSymbol[];\n    }\n\n    return acc;\n  }, []);\n\nexport const combinePortfolioAndSeries = (\n  portfolio: GroupedPortfolio,\n  series: GroupedSeries\n): PortfolioAssetDayPrice => {\n  const portfolioDates = Object.keys(portfolio).map(Number);\n\n  return Object.keys(series).reduce<PortfolioAssetDayPrice>((acc, date) => {\n    const portfolioDate = findClosestAndLessDate(Number(date), portfolioDates);\n    const portfolioDateVolume = portfolio[portfolioDate] || {};\n    const seriesDateVolume = series[date] || {};\n\n    const portfolioBySeries = (\n      Object.keys(seriesDateVolume) as AssetSymbol[]\n    ).reduce<AssetRecordWithTotal>(\n      (innerAcc, symbol) => {\n        const assetPriceByDate = seriesDateVolume[symbol] || 0;\n        const portfolioAssetInfo = portfolioDateVolume[symbol] || {\n          volume: 0,\n          investment: 0,\n        };\n        const assetPrice = portfolioAssetInfo.volume * assetPriceByDate;\n        const usdInvestments = portfolioDateVolume.USD?.investment || 0;\n        const totalPrice = innerAcc.TOTAL.price + assetPrice;\n\n        return {\n          ...innerAcc,\n          [symbol]: {\n            volume: portfolioAssetInfo.volume,\n            price: assetPrice,\n            investment: portfolioAssetInfo.investment,\n          },\n          TOTAL: {\n            volume: 0,\n            price: totalPrice,\n            investment: usdInvestments,\n          },\n        };\n      },\n      { TOTAL: { volume: 0, price: 0, investment: 0 } }\n    );\n\n    return {\n      ...acc,\n      [date]: portfolioBySeries,\n    };\n  }, {});\n};\n","import {\n  AssetTimeseriesQueryParams,\n  AssetTimeseriesResponse,\n  AssetSymbol,\n} from \"types\";\nimport { getDaysBefore, getTimestampsFromStart, resetDateToStart } from \"utils\";\n\nexport const getAssetTimeseries = (\n  asset: AssetSymbol,\n  queryParams: AssetTimeseriesQueryParams\n): Promise<AssetTimeseriesResponse> =>\n  fetch(\n    `https://data.messari.io/api/v1/assets/${asset}/metrics/price/time-series?${new URLSearchParams(\n      queryParams\n    ).toString()}`\n  ).then((res) => res.json());\n\nexport const getUSDTimeseries = (\n  start?: string\n): Promise<AssetTimeseriesResponse> =>\n  Promise.resolve<AssetTimeseriesResponse>({\n    status: { elapsed: 0, timestamp: \"0\" },\n    data: {\n      id: \"usd_id\",\n      name: \"USD\",\n      slug: \"usd\",\n      symbol: \"USD\",\n      values: getTimestampsFromStart(\n        Number(start),\n        getDaysBefore(resetDateToStart(new Date().getTime()), 1)\n      ).map((date) => [date, 1]),\n    },\n  });\n\nexport const getAssetsForPeriod = (\n  assets: AssetSymbol[],\n  queryParams: AssetTimeseriesQueryParams\n): Promise<AssetTimeseriesResponse[]> =>\n  Promise.all(\n    assets.map((asset) => {\n      if (asset === \"USD\") {\n        return getUSDTimeseries(queryParams.start);\n      }\n\n      return getAssetTimeseries(asset, queryParams);\n    })\n  );\n","import { createContext } from \"react\";\n\nimport { PortfolioManagerState } from \"./types\";\n\nexport const PortfolioManagerContext = createContext<PortfolioManagerState>({\n  setPortfolio: () => {},\n});\n","import { useContext } from \"react\";\n\nimport { PortfolioManagerContext } from \"./context\";\nimport { PortfolioManagerState } from \"./types\";\n\nexport const usePortfolioManager = (): PortfolioManagerState =>\n  useContext(PortfolioManagerContext);\n","import React, { useEffect, useState } from \"react\";\n\nimport { AssetSymbol, GroupedPortfolio, PortfolioAssetDayPrice } from \"types\";\nimport {\n  getUniqueAssets,\n  groupTimeseries,\n  combinePortfolioAndSeries,\n} from \"utils\";\nimport { getAssetsForPeriod } from \"services/messari\";\n\nimport { PortfolioManagerContext } from \"./context\";\n\nclass LCPortfolio {\n  static #PORTFOLIO_LC_KEY = \"PORTFOLIO_LC_KEY\";\n\n  static getFromStorage(): GroupedPortfolio | undefined {\n    const lcText = localStorage.getItem(this.#PORTFOLIO_LC_KEY);\n\n    if (!lcText) return undefined;\n\n    try {\n      return JSON.parse(lcText);\n    } catch {\n      return undefined;\n    }\n  }\n\n  static put(portfolio: GroupedPortfolio): void {\n    localStorage.setItem(this.#PORTFOLIO_LC_KEY, JSON.stringify(portfolio));\n  }\n}\n\nexport const PortfolioManager: React.FC = ({ children }) => {\n  const [portfolio, setPortfolio] = useState<GroupedPortfolio | undefined>(\n    LCPortfolio.getFromStorage()\n  );\n  const [portfolioAssetDayPrice, setPortfolioAssetDayPrice] =\n    useState<PortfolioAssetDayPrice>();\n  const [uniqueAssets, setUniqueAssets] = useState<AssetSymbol[]>();\n\n  useEffect(() => portfolio && LCPortfolio.put(portfolio), [portfolio]);\n\n  useEffect(() => {\n    if (portfolio) {\n      const assets = getUniqueAssets(portfolio);\n      const startDate = Object.keys(portfolio)[0];\n\n      setUniqueAssets(assets);\n\n      getAssetsForPeriod(assets, {\n        start: startDate,\n        columns: \"close\",\n        interval: \"1d\",\n      })\n        .then(groupTimeseries)\n        .then((assetSeries) =>\n          combinePortfolioAndSeries(portfolio, assetSeries)\n        )\n        .then(setPortfolioAssetDayPrice);\n    }\n  }, [portfolio]);\n\n  return (\n    <PortfolioManagerContext.Provider\n      value={{\n        portfolio,\n        portfolioAssetDayPrice,\n        uniqueAssets,\n        setPortfolio,\n      }}\n    >\n      {children}\n    </PortfolioManagerContext.Provider>\n  );\n};\n\nexport { usePortfolioManager } from \"./usePortfolio\";\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { usePortfolioManager } from \"services/PortfolioManager\";\nimport { resetDateToStart, getDaysBefore } from \"utils/date\";\nimport { formatSeriesFloat } from \"utils/chart\";\n\nexport const BarPortfolioStat: React.FC = () => {\n  const { portfolioAssetDayPrice } = usePortfolioManager();\n\n  if (!portfolioAssetDayPrice) {\n    return null;\n  }\n\n  const totalInfo =\n    portfolioAssetDayPrice[getDaysBefore(resetDateToStart(Date.now()), 1)]\n      .TOTAL;\n\n  return (\n    <Typography component=\"h1\" variant=\"body1\" color=\"inherit\" noWrap>\n      {`${formatSeriesFloat(totalInfo.price)}$ & ${formatSeriesFloat(\n        ((totalInfo.price - totalInfo.investment) / totalInfo.investment) * 100\n      )}%`}\n      {}\n    </Typography>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Container from \"@mui/material/Container\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport { styled, useTheme } from \"@mui/material/styles\";\n\nimport { AppBar } from \"./AppBar\";\nimport { Drawer } from \"./Drawer\";\nimport { Backdrop } from \"./Backdrop\";\nimport { SideMenuListItems, LINKS } from \"./SideMenuListItems\";\nimport { BarPortfolioStat } from \"./BarPortfolioStat\";\n\nconst drawerWidth = 240;\n\nconst mdTheme = createTheme();\n\nconst Main = styled(\"main\")(({ theme }) => ({\n  backgroundColor:\n    theme.palette.mode === \"light\"\n      ? theme.palette.grey[100]\n      : theme.palette.grey[900],\n  flexGrow: 1,\n  height: \"100vh\",\n  overflow: \"auto\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  [theme.breakpoints.down(\"sm\")]: {\n    marginLeft: theme.spacing(7),\n    width: `calc(100% - ${theme.spacing(7)}px)`,\n  },\n}));\n\nconst MobileBackdrop = styled(Backdrop)(({ theme }) => ({\n  [theme.breakpoints.up(\"sm\")]: {\n    display: \"none\",\n  },\n}));\n\nconst StyledContainer = styled(Container)(() => ({\n  flexGrow: 1,\n  padding: \"0 !important\",\n}));\n\nexport const Dashboard: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const location = useLocation();\n  const theme = useTheme();\n  const [open, setOpen] = useState(\n    window.innerWidth > theme.breakpoints.values.md\n  );\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n  const currentPageName = LINKS.find((link) =>\n    location.pathname.includes(link.path)\n  )?.text;\n\n  return (\n    <ThemeProvider theme={mdTheme}>\n      <Box sx={{ display: \"flex\" }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={open} drawerWidth={drawerWidth}>\n          <Toolbar variant=\"dense\" sx={{ justifyContent: \"space-between\" }}>\n            <Box display=\"flex\" alignItems=\"center\">\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={toggleDrawer}\n                sx={{\n                  marginRight: \"24px\",\n                  ...(open && { display: \"none\" }),\n                }}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap>\n                {currentPageName}\n              </Typography>\n            </Box>\n            <BarPortfolioStat />\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open} drawerWidth={drawerWidth}>\n          <Toolbar\n            variant=\"dense\"\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              px: [1],\n            }}\n          >\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Toolbar>\n          <Divider />\n          <SideMenuListItems />\n        </Drawer>\n        {open && <MobileBackdrop onClick={toggleDrawer} />}\n        <Main>\n          <Toolbar sx={{ flex: \"0 1 auto\" }} />\n          <StyledContainer maxWidth=\"lg\">{children}</StyledContainer>\n        </Main>\n      </Box>\n    </ThemeProvider>\n  );\n};\n","import React from \"react\";\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\n\nimport { usePortfolioManager } from \"services/PortfolioManager\";\nimport { PAGE_SLUG } from \"constants/app\";\n\nexport const PortfolioRoute: React.FC<RouteProps> = ({ children, ...rest }) => {\n  const { portfolio } = usePortfolioManager();\n\n  if (!portfolio) {\n    return <Redirect to={`/${PAGE_SLUG.upload}`} />;\n  }\n\n  return <Route {...rest}>{children}</Route>;\n};\n","import React from \"react\";\nimport Papa from \"papaparse\";\nimport Dropzone, { IDropzoneProps } from \"react-dropzone-uploader\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { parseFree2exPortfolio } from \"utils/csv\";\nimport { usePortfolioManager } from \"services/PortfolioManager\";\nimport { isFree2exCSV } from \"utils\";\n\nimport \"react-dropzone-uploader/dist/styles.css\";\n\nexport const Upload: React.FC = () => {\n  const { setPortfolio } = usePortfolioManager();\n  const history = useHistory();\n\n  const handleSubmit: IDropzoneProps[\"onSubmit\"] = (files) => {\n    if (files.length) {\n      files[0].file\n        .text()\n        .then((content) => Papa.parse(content).data)\n        .then((csv) => {\n          if (isFree2exCSV(csv)) {\n            return parseFree2exPortfolio(csv);\n          }\n\n          return;\n        })\n        .then((p) => {\n          if (p) {\n            setPortfolio(p);\n            history.push(\"/\");\n          } else {\n            files[0].remove();\n          }\n        });\n    }\n  };\n\n  return (\n    <Dropzone\n      styles={{ dropzone: { overflow: \"hidden\", height: \"100%\" } }}\n      onSubmit={handleSubmit}\n      accept=\".csv\"\n      multiple={false}\n    />\n  );\n};\n","import React from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Box from \"@mui/material/Box\";\n\nexport const Loader: React.FC = () => (\n  <Box\n    sx={{\n      display: \"flex\",\n      height: \"100%\",\n      width: \"100%\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <CircularProgress />\n  </Box>\n);\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\n\nimport { DailyAssetPrice } from \"types\";\nimport {\n  formatSeriesDate,\n  formatSeriesNumber,\n  formatSeriesFloat,\n} from \"utils/chart\";\n\nconst Container = styled(\"div\")(() => ({\n  fontSize: \"10px\",\n  padding: \"4px\",\n  background: \"rgba(0, 26, 39, 0.9)\",\n  color: \"white\",\n  borderRadius: \"4px\",\n  textAlign: \"center\",\n  fontFamily: \"sans-serif\",\n}));\nconst Table = styled(\"table\")(() => ({\n  whiteSpace: \"nowrap\",\n}));\nconst TableRow = styled(\"tr\")(() => ({\n  fontWeight: \"bold\",\n}));\nconst CircleContainer = styled(\"td\")(() => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\nconst Circle = styled(\"circle\")(({ color }) => ({\n  stroke: \"white\",\n  fill: color,\n  strokeWidth: 2,\n}));\nconst Date = styled(\"strong\")(() => ({\n  marginBottom: \"3px\",\n  display: \"inline-block\",\n}));\n\nexport type CustomTooltipProps = {\n  active?: boolean;\n  payload?: { payload: DailyAssetPrice; name: string; color: string }[];\n  color?: string;\n};\n\nexport const CustomTooltip: React.FC<CustomTooltipProps> = ({\n  active,\n  payload,\n}) => {\n  if (active && payload?.length) {\n    return (\n      <Container className=\"area-chart-tooltip\">\n        <Date>{formatSeriesDate(payload[0].payload.date)}</Date>\n        <Table>\n          <thead>\n            <tr>\n              <th />\n              <th>Symbol</th>\n              <th>Price</th>\n              <th>Volume</th>\n            </tr>\n          </thead>\n          <tbody>\n            {payload.map(({ payload: data, name, color }) => (\n              <TableRow>\n                <CircleContainer>\n                  <svg width=\"14\" height=\"14\">\n                    <Circle cx=\"7\" cy=\"7\" r=\"5\" color={color} />\n                  </svg>\n                </CircleContainer>\n                <td>{name}</td>\n                <td>{formatSeriesNumber(data.price)}</td>\n                <td>{data.volume ? formatSeriesFloat(data.volume) : \"---\"}</td>\n              </TableRow>\n            ))}\n          </tbody>\n        </Table>\n      </Container>\n    );\n  }\n\n  return <div />;\n};\n","import {\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  LineChart,\n  CartesianGrid,\n} from \"recharts\";\n\nimport {\n  formatSeriesDate,\n  formatSeriesNumber,\n  formatSeriesFloat,\n} from \"utils/chart\";\nimport { DailyAssetPrice, Series } from \"types\";\n\nimport { CustomTooltip } from \"./recharts/CustomTooltip\";\n\nconst DOMAIN = [\"auto\", \"auto\"];\nconst COLOR_PALETTE = [\"#1976d2\", \"#F99B1C\"];\n\nexport type ChartByAssetProps = {\n  series: Series[];\n  seriesKey?: Exclude<keyof DailyAssetPrice, \"date\">;\n};\n\nexport const ChartByAsset: React.FC<ChartByAssetProps> = ({\n  series,\n  seriesKey = \"price\",\n}) => (\n  <ResponsiveContainer>\n    <LineChart margin={{ left: 0, top: 0, right: 20, bottom: 0 }}>\n      <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n      <XAxis\n        dataKey=\"date\"\n        scale=\"time\"\n        type=\"number\"\n        tickFormatter={formatSeriesDate}\n        domain={DOMAIN}\n      />\n      <YAxis\n        dataKey={seriesKey}\n        type=\"number\"\n        tickFormatter={\n          seriesKey === \"price\" ? formatSeriesNumber : formatSeriesFloat\n        }\n        domain={DOMAIN}\n      />\n      <Tooltip content={<CustomTooltip />} />\n      {series.map((s, index) => {\n        const strokeColor = COLOR_PALETTE[index] || COLOR_PALETTE[0];\n\n        return (\n          <Line\n            type=\"monotone\"\n            dataKey={seriesKey}\n            data={s.data}\n            name={s.label}\n            key={s.label}\n            stroke={strokeColor}\n          />\n        );\n      })}\n    </LineChart>\n  </ResponsiveContainer>\n);\n","import React, { useMemo } from \"react\";\n\nimport { usePortfolioManager } from \"services/PortfolioManager\";\nimport { Loader } from \"components/Loader\";\nimport { ChartByAsset } from \"components/ChartByAsset\";\nimport { Series } from \"types\";\nimport { getChartByAsset } from \"utils\";\n\nexport const Portfolio: React.FC = () => {\n  const { portfolioAssetDayPrice } = usePortfolioManager();\n\n  const chartSeries = useMemo<Series[] | undefined>(\n    () =>\n      portfolioAssetDayPrice && [\n        getChartByAsset(\"TOTAL\", portfolioAssetDayPrice, \"price\"),\n        getChartByAsset(\n          \"TOTAL\",\n          portfolioAssetDayPrice,\n          \"investment\",\n          \"Fund\",\n          false\n        ),\n      ],\n    [portfolioAssetDayPrice]\n  );\n\n  if (!chartSeries) {\n    return <Loader />;\n  }\n\n  return <ChartByAsset series={chartSeries} />;\n};\n","import React from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\n\nimport { usePortfolioManager } from \"services/PortfolioManager\";\nimport { Loader } from \"components/Loader\";\nimport { ChartByAsset } from \"components/ChartByAsset\";\nimport { getChartByAsset } from \"utils\";\n\nexport const Assets: React.FC = () => {\n  const { portfolioAssetDayPrice, uniqueAssets } = usePortfolioManager();\n\n  if (!portfolioAssetDayPrice || !uniqueAssets) {\n    return <Loader />;\n  }\n\n  return (\n    <Grid container height=\"100%\">\n      {uniqueAssets.map((asset) => (\n        <Grid key={asset} item md={6} xs={12} mb={5} height={300}>\n          <Typography variant=\"h5\">{asset}</Typography>\n          <ChartByAsset\n            series={[\n              getChartByAsset(asset, portfolioAssetDayPrice, \"price\"),\n              getChartByAsset(\n                asset,\n                portfolioAssetDayPrice,\n                \"investment\",\n                \"Fund\",\n                false\n              ),\n            ]}\n          />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport { ThemeProvider } from \"@mui/material\";\nimport { Switch, Route, BrowserRouter, Redirect } from \"react-router-dom\";\n\nimport { theme } from \"constants/theme\";\nimport { PAGE_SLUG } from \"constants/app\";\nimport { Dashboard } from \"components/Dashboard\";\nimport { PortfolioRoute } from \"components/PortfolioRoute\";\nimport { PortfolioManager } from \"services/PortfolioManager\";\nimport { Upload, Portfolio, Assets } from \"pages\";\n\nexport const App: React.FC = () => (\n  <BrowserRouter basename=\"/portapp\">\n    <ThemeProvider theme={theme}>\n      <PortfolioManager>\n        <Dashboard>\n          <Switch>\n            <Route exact path={`/${PAGE_SLUG.upload}`}>\n              <Upload />\n            </Route>\n            <PortfolioRoute exact path={`/${PAGE_SLUG.portfolio}`}>\n              <Portfolio />\n            </PortfolioRoute>\n            <PortfolioRoute exact path={`/${PAGE_SLUG.assets}`}>\n              <Assets />\n            </PortfolioRoute>\n            <Redirect to={`/${PAGE_SLUG.portfolio}`} />\n          </Switch>\n        </Dashboard>\n      </PortfolioManager>\n    </ThemeProvider>\n  </BrowserRouter>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}