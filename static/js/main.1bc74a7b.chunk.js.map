{"version":3,"sources":["constants/theme.ts","constants/app.ts","components/Copyright.tsx","components/AppBar.tsx","components/Drawer.tsx","components/Backdrop.tsx","components/SideMenuListItems.tsx","components/Dashboard.tsx","utils/chart.ts","utils/free2ex.ts","utils/date.ts","utils/csv.ts","utils/messari.ts","utils/portfolio.ts","services/messari.ts","services/PortfolioManager/context.ts","services/PortfolioManager/usePortfolio.ts","services/PortfolioManager/index.tsx","components/PortfolioRoute.tsx","pages/Upload.tsx","components/Loader.tsx","components/recharts/CustomTooltip.tsx","components/ChartByAsset.tsx","pages/Portfolio.tsx","pages/Assets.tsx","App.tsx","index.tsx"],"names":["theme","createTheme","PAGE_SLUG","Copyright","props","Box","sx","margin","flex","Typography","variant","color","align","Link","href","Date","getFullYear","AppBar","styled","MuiAppBar","shouldForwardProp","prop","open","drawerWidth","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","Drawer","MuiDrawer","position","whiteSpace","breakpoints","down","height","appBar","overflowX","spacing","up","Backdrop","backgroundColor","animation","opacity","from","to","LINKS","path","text","Icon","SideMenuListItems","history","useHistory","location","useLocation","onButtonClick","useCallback","push","isLinkActive","pathname","includes","List","map","ListItemButton","onClick","selected","ListItemIcon","ListItemText","primary","mdTheme","Main","palette","mode","grey","flexGrow","overflow","display","flexDirection","MobileBackdrop","Dashboard","children","useTheme","useState","window","innerWidth","values","md","setOpen","toggleDrawer","currentPageName","find","link","ThemeProvider","CssBaseline","Toolbar","IconButton","edge","marginRight","component","noWrap","alignItems","justifyContent","px","Divider","Container","maxWidth","mt","mb","padding","getChartByAsset","asset","portfolioAssetDayPrice","key","label","haveVolume","data","Object","keys","date","assetInfo","Number","price","volume","formatSeriesDate","toLocaleDateString","year","month","day","formatSeriesNumber","num","toFixed","toString","formatSeriesFloat","isFree2exAssetOperation","length","resetDateToStart","setUTCHours","getTimestampsFromStart","startDate","endDate","start","now","result","getDaysBefore","number","d","setDate","getDate","parseFree2exPortfolio","csv","operations","lastAssetRecord","dates","sort","a","b","groupedPortfolio","i","reduce","acc","assetOperation","prevAssetInfo","symbol","investment","parseGroupedPortfolioOperations","filter","free2exOperation","operationDate","split","trim","asset1","asset2","parseFloat","groupTimeseries","timeSeries","series","groupedWithPrice","innerAcc","combinePortfolioAndSeries","portfolio","portfolioDates","portfolioDate","currentDate","findClosestAndLessDate","portfolioDateVolume","seriesDateVolume","portfolioBySeries","assetPriceByDate","portfolioAssetInfo","assetPrice","usdInvestments","USD","totalPrice","TOTAL","getAssetsForPeriod","assets","queryParams","Promise","all","resolve","status","elapsed","timestamp","id","name","slug","getTime","fetch","URLSearchParams","then","res","json","getAssetTimeseries","PortfolioManagerContext","createContext","setPortfolio","usePortfolioManager","useContext","LCPortfolio","lcText","localStorage","getItem","this","JSON","parse","setItem","stringify","PortfolioManager","getFromStorage","setPortfolioAssetDayPrice","uniqueAssets","setUniqueAssets","useEffect","put","getUniqueAssets","columns","interval","assetSeries","Provider","value","PortfolioRoute","rest","Upload","styles","dropzone","onSubmit","files","file","content","Papa","record","Boolean","Array","isArray","isFree2exCSV","p","remove","accept","multiple","Loader","CircularProgress","fontSize","background","borderRadius","textAlign","fontFamily","Table","TableRow","fontWeight","CircleContainer","Circle","stroke","fill","strokeWidth","marginBottom","CustomTooltip","active","payload","className","cx","cy","r","DOMAIN","COLOR_PALETTE","ChartByAsset","seriesKey","ResponsiveContainer","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","scale","type","tickFormatter","domain","YAxis","Tooltip","s","index","strokeColor","Line","Legend","Portfolio","chartSeries","useMemo","Assets","Grid","container","item","xs","App","basename","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bc74a7b.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material\";\n\nexport const theme = createTheme({});\n","import { PageSlug } from \"types/app\";\n\nexport const PAGE_SLUG: Record<PageSlug, PageSlug> = {\n  assets: \"assets\",\n  portfolio: \"portfolio\",\n  upload: \"upload\",\n};\n","import React from \"react\";\nimport Typography, { TypographyProps } from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Link from \"@mui/material/Link\";\n\nexport const Copyright: React.FC<TypographyProps> = (props) => (\n  <Box sx={{ margin: \"8px 0\", flex: \"0 1 auto\" }}>\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  </Box>\n);\n","import { styled } from \"@mui/material/styles\";\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from \"@mui/material/AppBar\";\n\nexport type AppBarProps = MuiAppBarProps & {\n  open?: boolean;\n  drawerWidth: number;\n};\n\nexport const AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\" && prop !== \"drawerWidth\",\n})<AppBarProps>(({ theme, open, drawerWidth }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n","import { styled } from \"@mui/material/styles\";\nimport MuiDrawer, { DrawerProps as MuiDrawerProps } from \"@mui/material/Drawer\";\n\nexport type DrawerProps = MuiDrawerProps & {\n  open?: boolean;\n  drawerWidth: number;\n};\n\nexport const Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\" && prop !== \"drawerWidth\",\n})<DrawerProps>(({ theme, open, drawerWidth }) => ({\n  zIndex: theme.zIndex.drawer,\n\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    [theme.breakpoints.down(\"sm\")]: {\n      position: \"absolute\",\n      height: \"100%\",\n      zIndex: theme.zIndex.appBar,\n    },\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    }),\n  },\n}));\n","import { styled } from \"@mui/material/styles\";\n\nexport const Backdrop = styled(\"div\")(({ theme }) => ({\n  zIndex: theme.zIndex.drawer - 1,\n  width: \"100vw\",\n  height: \"100vh\",\n  position: \"fixed\",\n  backgroundColor: \"black\",\n  animation: `fadeIn 500ms ease`,\n  opacity: 0.2,\n  \"@keyframes fadeIn\": {\n    from: {\n      opacity: 0,\n    },\n    to: {\n      opacity: 0.2,\n    },\n  },\n}));\n","import React, { useCallback } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport BusinessCenterIcon from \"@mui/icons-material/BusinessCenter\";\nimport UploadFileRoundedIcon from \"@mui/icons-material/UploadFileRounded\";\nimport PieChartIcon from \"@mui/icons-material/PieChart\";\nimport { PAGE_SLUG } from \"constants/app\";\n\nexport const LINKS: Array<{\n  path: string;\n  text: string;\n  Icon: React.ReactNode;\n}> = [\n  {\n    path: `/${PAGE_SLUG.upload}`,\n    text: \"Upload\",\n    Icon: <UploadFileRoundedIcon />,\n  },\n  {\n    path: `/${PAGE_SLUG.portfolio}`,\n    text: \"Portfolio\",\n    Icon: <BusinessCenterIcon />,\n  },\n  {\n    path: `/${PAGE_SLUG.assets}`,\n    text: \"Asset\",\n    Icon: <PieChartIcon />,\n  },\n];\n\nexport const SideMenuListItems: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const onButtonClick = useCallback(\n    (path: string) => () => {\n      history.push(path);\n    },\n    [history]\n  );\n  const isLinkActive = (path: string) => location.pathname.includes(path);\n\n  return (\n    <List>\n      {LINKS.map(({ Icon, text, path }) => (\n        <ListItemButton\n          key={path}\n          onClick={onButtonClick(path)}\n          selected={isLinkActive(path)}\n        >\n          <ListItemIcon>{Icon}</ListItemIcon>\n          <ListItemText primary={text} />\n        </ListItemButton>\n      ))}\n    </List>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Container from \"@mui/material/Container\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport { styled, useTheme } from \"@mui/material/styles\";\n\nimport { Copyright } from \"./Copyright\";\nimport { AppBar } from \"./AppBar\";\nimport { Drawer } from \"./Drawer\";\nimport { Backdrop } from \"./Backdrop\";\nimport { SideMenuListItems, LINKS } from \"./SideMenuListItems\";\n\nconst drawerWidth = 240;\n\nconst mdTheme = createTheme();\n\nconst Main = styled(\"main\")(({ theme }) => ({\n  backgroundColor:\n    theme.palette.mode === \"light\"\n      ? theme.palette.grey[100]\n      : theme.palette.grey[900],\n  flexGrow: 1,\n  height: \"100vh\",\n  overflow: \"auto\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  [theme.breakpoints.down(\"sm\")]: {\n    marginLeft: theme.spacing(7),\n    width: `calc(100% - ${theme.spacing(7)}px)`,\n  },\n}));\n\nconst MobileBackdrop = styled(Backdrop)(({ theme }) => ({\n  [theme.breakpoints.up(\"sm\")]: {\n    display: \"none\",\n  },\n}));\n\nexport const Dashboard: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const location = useLocation();\n  const theme = useTheme();\n  const [open, setOpen] = useState(\n    window.innerWidth > theme.breakpoints.values.md\n  );\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n  const currentPageName = LINKS.find((link) =>\n    location.pathname.includes(link.path)\n  )?.text;\n\n  return (\n    <ThemeProvider theme={mdTheme}>\n      <Box sx={{ display: \"flex\" }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={open} drawerWidth={drawerWidth}>\n          <Toolbar variant=\"dense\">\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer}\n              sx={{\n                marginRight: \"36px\",\n                ...(open && { display: \"none\" }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              {currentPageName}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open} drawerWidth={drawerWidth}>\n          <Toolbar\n            variant=\"dense\"\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              px: [1],\n            }}\n          >\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Toolbar>\n          <Divider />\n          <SideMenuListItems />\n        </Drawer>\n        {open && <MobileBackdrop onClick={toggleDrawer} />}\n        <Main>\n          <Toolbar sx={{ flex: \"0 1 auto\" }} />\n          <Container\n            maxWidth=\"lg\"\n            sx={{ mt: 4, mb: 4, flexGrow: 1, padding: \"0 !important\" }}\n          >\n            {children}\n          </Container>\n          <Copyright />\n        </Main>\n      </Box>\n    </ThemeProvider>\n  );\n};\n","import {\n  Series,\n  DailyAssetPrice,\n  PortfolioAssetDayPrice,\n  PortfolioAssetSymbol,\n  AssetRecordMeta,\n} from \"types\";\n\nexport const getChartByAsset = (\n  asset: PortfolioAssetSymbol,\n  portfolioAssetDayPrice: PortfolioAssetDayPrice,\n  key: keyof AssetRecordMeta = \"price\",\n  label: string = asset,\n  haveVolume = true\n): Series => {\n  const data = Object.keys(portfolioAssetDayPrice).map<DailyAssetPrice>(\n    (date) => {\n      const assetInfo = portfolioAssetDayPrice[date][asset];\n\n      return {\n        date: Number(date),\n        price: (assetInfo && assetInfo[key]) || 0,\n        volume: (haveVolume && assetInfo?.volume) || 0,\n      };\n    }\n  );\n\n  return {\n    label,\n    data,\n  };\n};\n\nexport const formatSeriesDate = (date: number | string | Date): string =>\n  new Date(date).toLocaleDateString(\"en\", {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n  });\n\nexport const formatSeriesNumber = (num: number): string =>\n  Number(num.toFixed()).toString();\n\nexport const formatSeriesFloat = (num: number): string =>\n  Number(num.toFixed(3)).toString();\n","import { Free2exAssetOperation, Free2exCSV } from \"types/free2ex\";\n\nexport const isFree2exAssetOperation = (\n  data: unknown\n): data is Free2exAssetOperation => (data as Free2exAssetOperation).length > 22;\n\nexport const isFree2exCSV = (csv: Array<unknown>): csv is Free2exCSV =>\n  !!csv.find((record) =>\n    Boolean(\n      Array.isArray(record) &&\n        record.length === 2 &&\n        record[0] === \"Broker:\" &&\n        record[1] === \"Free2ex (free2ex.com)\"\n    )\n  );\n","export const resetDateToStart = (date: number): number =>\n  new Date(date).setUTCHours(0, 0, 0, 0);\n\nexport const findClosestAndLessDate = (\n  date: number,\n  dates: number[]\n): number => {\n  let result = 0;\n\n  for (const currentDate of dates) {\n    if (currentDate <= date && currentDate > result) {\n      result = currentDate;\n    }\n  }\n\n  return result;\n};\n\nexport const getTimestampsFromStart = (\n  startDate: number,\n  endDate: number\n): number[] => {\n  const start = resetDateToStart(startDate);\n  const now = resetDateToStart(endDate);\n  const oneDay = 86400000;\n  const result = [start];\n\n  while (result[result.length - 1] < now) {\n    result.push(result[result.length - 1] + oneDay);\n  }\n\n  return result;\n};\n\nexport const getDaysBefore = (date: number, number: number): number => {\n  const d = new Date(date);\n  return d.setDate(d.getDate() - number);\n};\n","import {\n  AssetRecord,\n  GroupedPortfolio,\n  GroupedPortfolioOperation,\n} from \"types/portfolio\";\nimport { Free2exCSV, Free2exType } from \"types/free2ex\";\nimport { AssetSymbol } from \"types/asset\";\n\nimport { isFree2exAssetOperation } from \"./free2ex\";\nimport { resetDateToStart } from \"./date\";\n\nexport const parseGroupedPortfolioOperations = (\n  operations: GroupedPortfolioOperation\n): GroupedPortfolio => {\n  const dates = Object.keys(operations).sort((a, b) => Number(a) - Number(b));\n  const groupedPortfolio: GroupedPortfolio = {};\n  let lastAssetRecord: AssetRecord;\n\n  for (let i = 0; i < dates.length; i++) {\n    lastAssetRecord = { ...(groupedPortfolio[dates[i - 1]] || {}) };\n\n    groupedPortfolio[dates[i]] = operations[dates[i]].reduce<AssetRecord>(\n      (acc, assetOperation) => {\n        const prevAssetInfo = acc[assetOperation.symbol];\n        if (prevAssetInfo) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          acc[assetOperation.symbol]! = {\n            ...prevAssetInfo,\n            investment: prevAssetInfo.investment + assetOperation.investment,\n            volume: prevAssetInfo.volume + assetOperation.volume,\n          };\n        } else {\n          acc[assetOperation.symbol] = {\n            volume: assetOperation.volume,\n            investment: assetOperation.investment,\n          };\n        }\n\n        return acc;\n      },\n      lastAssetRecord\n    );\n  }\n\n  return groupedPortfolio;\n};\n\nexport const parseFree2exPortfolio = (csv: Free2exCSV): GroupedPortfolio =>\n  parseGroupedPortfolioOperations(\n    csv\n      .filter(isFree2exAssetOperation)\n      .reduce<GroupedPortfolioOperation>((acc, free2exOperation) => {\n        const operationDate = resetDateToStart(+new Date(free2exOperation[1]));\n        const operations = acc[operationDate] || [];\n\n        if (\n          ([\"BUY Market\", \"SELL Market\"] as Free2exType[]).includes(\n            free2exOperation[2]\n          )\n        ) {\n          const [asset1, asset2] = free2exOperation[5]\n            .split(\"/\")\n            .map((asset) => asset.trim()) as [AssetSymbol, AssetSymbol];\n\n          operations.push({\n            symbol: asset1,\n            volume: parseFloat(free2exOperation[19]),\n            investment:\n              asset2 === \"USD\" ? parseFloat(free2exOperation[20]) * -1 : 0,\n          });\n          operations.push({\n            symbol: asset2,\n            volume: parseFloat(free2exOperation[20]),\n            investment: 0,\n          });\n        } else {\n          operations.push({\n            symbol: free2exOperation[5] as AssetSymbol,\n            volume: parseFloat(free2exOperation[19]),\n            investment: parseFloat(free2exOperation[19]),\n          });\n        }\n\n        return { ...acc, [operationDate]: operations };\n      }, {})\n  );\n","import { AssetSymbol } from \"types/asset\";\nimport { AssetTimeseriesResponse, GroupedSeries } from \"types/messari\";\n\ntype GroupByDateWithPrice = Record<\n  string,\n  { price: number; symbol: AssetSymbol }\n>;\n\nexport const groupTimeseries = (\n  timeSeries: AssetTimeseriesResponse[]\n): GroupedSeries =>\n  timeSeries\n    .map((series) =>\n      series.data.values.reduce<GroupByDateWithPrice>(\n        (acc, [date, price]) => ({\n          ...acc,\n          [date]: { price, symbol: series.data.symbol },\n        }),\n        {}\n      )\n    )\n    .reduce<GroupedSeries>((acc, groupedWithPrice) => {\n      const dates = Object.keys(groupedWithPrice);\n\n      return dates.reduce<GroupedSeries>(\n        (innerAcc, date) => ({\n          ...innerAcc,\n          [date]: {\n            ...innerAcc[date],\n            [groupedWithPrice[date].symbol]: groupedWithPrice[date].price,\n          },\n        }),\n        acc\n      );\n    }, {});\n","import {\n  GroupedSeries,\n  AssetSymbol,\n  GroupedPortfolio,\n  PortfolioAssetDayPrice,\n  AssetRecordWithTotal,\n} from \"types\";\nimport { findClosestAndLessDate } from \"utils\";\n\nexport const getUniqueAssets = (portfolio: GroupedPortfolio): AssetSymbol[] =>\n  Object.keys(portfolio).reduce<AssetSymbol[]>((acc, date) => {\n    if (acc.length < Object.keys(portfolio[date]).length) {\n      return Object.keys(portfolio[date]) as AssetSymbol[];\n    }\n\n    return acc;\n  }, []);\n\nexport const combinePortfolioAndSeries = (\n  portfolio: GroupedPortfolio,\n  series: GroupedSeries\n): PortfolioAssetDayPrice => {\n  const portfolioDates = Object.keys(portfolio).map(Number);\n\n  return Object.keys(series).reduce<PortfolioAssetDayPrice>((acc, date) => {\n    const portfolioDate = findClosestAndLessDate(Number(date), portfolioDates);\n    const portfolioDateVolume = portfolio[portfolioDate] || {};\n    const seriesDateVolume = series[date] || {};\n\n    const portfolioBySeries = (\n      Object.keys(seriesDateVolume) as AssetSymbol[]\n    ).reduce<AssetRecordWithTotal>(\n      (innerAcc, symbol) => {\n        const assetPriceByDate = seriesDateVolume[symbol] || 0;\n        const portfolioAssetInfo = portfolioDateVolume[symbol] || {\n          volume: 0,\n          investment: 0,\n        };\n        const assetPrice = portfolioAssetInfo.volume * assetPriceByDate;\n        const usdInvestments = portfolioDateVolume.USD?.investment || 0;\n        const totalPrice = innerAcc.TOTAL.price + assetPrice;\n\n        return {\n          ...innerAcc,\n          [symbol]: {\n            volume: portfolioAssetInfo.volume,\n            price: assetPrice,\n            investment: portfolioAssetInfo.investment,\n          },\n          TOTAL: {\n            volume: 0,\n            price: totalPrice,\n            investment: usdInvestments,\n          },\n        };\n      },\n      { TOTAL: { volume: 0, price: 0, investment: 0 } }\n    );\n\n    return {\n      ...acc,\n      [date]: portfolioBySeries,\n    };\n  }, {});\n};\n","import {\n  AssetTimeseriesQueryParams,\n  AssetTimeseriesResponse,\n  AssetSymbol,\n} from \"types\";\nimport { getDaysBefore, getTimestampsFromStart, resetDateToStart } from \"utils\";\n\nexport const getAssetTimeseries = (\n  asset: AssetSymbol,\n  queryParams: AssetTimeseriesQueryParams\n): Promise<AssetTimeseriesResponse> =>\n  fetch(\n    `https://data.messari.io/api/v1/assets/${asset}/metrics/price/time-series?${new URLSearchParams(\n      queryParams\n    ).toString()}`\n  ).then((res) => res.json());\n\nexport const getUSDTimeseries = (\n  start?: string\n): Promise<AssetTimeseriesResponse> =>\n  Promise.resolve<AssetTimeseriesResponse>({\n    status: { elapsed: 0, timestamp: \"0\" },\n    data: {\n      id: \"usd_id\",\n      name: \"USD\",\n      slug: \"usd\",\n      symbol: \"USD\",\n      values: getTimestampsFromStart(\n        Number(start),\n        getDaysBefore(resetDateToStart(new Date().getTime()), 1)\n      ).map((date) => [date, 1]),\n    },\n  });\n\nexport const getAssetsForPeriod = (\n  assets: AssetSymbol[],\n  queryParams: AssetTimeseriesQueryParams\n): Promise<AssetTimeseriesResponse[]> =>\n  Promise.all(\n    assets.map((asset) => {\n      if (asset === \"USD\") {\n        return getUSDTimeseries(queryParams.start);\n      }\n\n      return getAssetTimeseries(asset, queryParams);\n    })\n  );\n","import { createContext } from \"react\";\n\nimport { PortfolioManagerState } from \"./types\";\n\nexport const PortfolioManagerContext = createContext<PortfolioManagerState>({\n  setPortfolio: () => {},\n});\n","import { useContext } from \"react\";\n\nimport { PortfolioManagerContext } from \"./context\";\nimport { PortfolioManagerState } from \"./types\";\n\nexport const usePortfolioManager = (): PortfolioManagerState =>\n  useContext(PortfolioManagerContext);\n","import React, { useEffect, useState } from \"react\";\n\nimport { AssetSymbol, GroupedPortfolio, PortfolioAssetDayPrice } from \"types\";\nimport {\n  getUniqueAssets,\n  groupTimeseries,\n  combinePortfolioAndSeries,\n} from \"utils\";\nimport { getAssetsForPeriod } from \"services/messari\";\n\nimport { PortfolioManagerContext } from \"./context\";\n\nclass LCPortfolio {\n  static #PORTFOLIO_LC_KEY = \"PORTFOLIO_LC_KEY\";\n\n  static getFromStorage(): GroupedPortfolio | undefined {\n    const lcText = localStorage.getItem(this.#PORTFOLIO_LC_KEY);\n\n    if (!lcText) return undefined;\n\n    try {\n      return JSON.parse(lcText);\n    } catch {\n      return undefined;\n    }\n  }\n\n  static put(portfolio: GroupedPortfolio): void {\n    localStorage.setItem(this.#PORTFOLIO_LC_KEY, JSON.stringify(portfolio));\n  }\n}\n\nexport const PortfolioManager: React.FC = ({ children }) => {\n  const [portfolio, setPortfolio] = useState<GroupedPortfolio | undefined>(\n    LCPortfolio.getFromStorage()\n  );\n  const [portfolioAssetDayPrice, setPortfolioAssetDayPrice] =\n    useState<PortfolioAssetDayPrice>();\n  const [uniqueAssets, setUniqueAssets] = useState<AssetSymbol[]>();\n\n  useEffect(() => portfolio && LCPortfolio.put(portfolio), [portfolio]);\n\n  useEffect(() => {\n    if (portfolio) {\n      const assets = getUniqueAssets(portfolio);\n      const startDate = Object.keys(portfolio)[0];\n\n      setUniqueAssets(assets);\n\n      getAssetsForPeriod(assets, {\n        start: startDate,\n        columns: \"close\",\n        interval: \"1d\",\n      })\n        .then(groupTimeseries)\n        .then((assetSeries) =>\n          combinePortfolioAndSeries(portfolio, assetSeries)\n        )\n        .then(setPortfolioAssetDayPrice);\n    }\n  }, [portfolio]);\n\n  return (\n    <PortfolioManagerContext.Provider\n      value={{\n        portfolio,\n        portfolioAssetDayPrice,\n        uniqueAssets,\n        setPortfolio,\n      }}\n    >\n      {children}\n    </PortfolioManagerContext.Provider>\n  );\n};\n\nexport { usePortfolioManager } from \"./usePortfolio\";\n","import React from \"react\";\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\n\nimport { usePortfolioManager } from \"services/PortfolioManager\";\nimport { PAGE_SLUG } from \"constants/app\";\n\nexport const PortfolioRoute: React.FC<RouteProps> = ({ children, ...rest }) => {\n  const { portfolio } = usePortfolioManager();\n\n  if (!portfolio) {\n    return <Redirect to={`/${PAGE_SLUG.upload}`} />;\n  }\n\n  return <Route {...rest}>{children}</Route>;\n};\n","import React from \"react\";\nimport Papa from \"papaparse\";\nimport Dropzone, { IDropzoneProps } from \"react-dropzone-uploader\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { parseFree2exPortfolio } from \"utils/csv\";\nimport { usePortfolioManager } from \"services/PortfolioManager\";\nimport { isFree2exCSV } from \"utils\";\n\nimport \"react-dropzone-uploader/dist/styles.css\";\n\nexport const Upload: React.FC = () => {\n  const { setPortfolio } = usePortfolioManager();\n  const history = useHistory();\n\n  const handleSubmit: IDropzoneProps[\"onSubmit\"] = (files) => {\n    if (files.length) {\n      files[0].file\n        .text()\n        .then((content) => Papa.parse(content).data)\n        .then((csv) => {\n          if (isFree2exCSV(csv)) {\n            return parseFree2exPortfolio(csv);\n          }\n\n          return;\n        })\n        .then((p) => {\n          if (p) {\n            setPortfolio(p);\n            history.push(\"/\");\n          } else {\n            files[0].remove();\n          }\n        });\n    }\n  };\n\n  return (\n    <Dropzone\n      styles={{ dropzone: { overflow: \"hidden\", height: \"100%\" } }}\n      onSubmit={handleSubmit}\n      accept=\".csv\"\n      multiple={false}\n    />\n  );\n};\n","import React from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Box from \"@mui/material/Box\";\n\nexport const Loader: React.FC = () => (\n  <Box\n    sx={{\n      display: \"flex\",\n      height: \"100%\",\n      width: \"100%\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }}\n  >\n    <CircularProgress />\n  </Box>\n);\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\n\nimport { DailyAssetPrice } from \"types\";\nimport {\n  formatSeriesDate,\n  formatSeriesNumber,\n  formatSeriesFloat,\n} from \"utils/chart\";\n\nconst Container = styled(\"div\")(() => ({\n  fontSize: \"10px\",\n  padding: \"4px\",\n  background: \"rgba(0, 26, 39, 0.9)\",\n  color: \"white\",\n  borderRadius: \"4px\",\n  textAlign: \"center\",\n  fontFamily: \"sans-serif\",\n}));\nconst Table = styled(\"table\")(() => ({\n  whiteSpace: \"nowrap\",\n}));\nconst TableRow = styled(\"tr\")(() => ({\n  fontWeight: \"bold\",\n}));\nconst CircleContainer = styled(\"td\")(() => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\nconst Circle = styled(\"circle\")(({ color }) => ({\n  stroke: \"white\",\n  fill: color,\n  strokeWidth: 2,\n}));\nconst Date = styled(\"strong\")(() => ({\n  marginBottom: \"3px\",\n  display: \"inline-block\",\n}));\n\nexport type CustomTooltipProps = {\n  active?: boolean;\n  payload?: { payload: DailyAssetPrice; name: string; color: string }[];\n  color?: string;\n};\n\nexport const CustomTooltip: React.FC<CustomTooltipProps> = ({\n  active,\n  payload,\n}) => {\n  if (active && payload?.length) {\n    return (\n      <Container className=\"area-chart-tooltip\">\n        <Date>{formatSeriesDate(payload[0].payload.date)}</Date>\n        <Table>\n          <thead>\n            <tr>\n              <th />\n              <th>Symbol</th>\n              <th>Price</th>\n              <th>Volume</th>\n            </tr>\n          </thead>\n          <tbody>\n            {payload.map(({ payload: data, name, color }) => (\n              <TableRow>\n                <CircleContainer>\n                  <svg width=\"14\" height=\"14\">\n                    <Circle cx=\"7\" cy=\"7\" r=\"5\" color={color} />\n                  </svg>\n                </CircleContainer>\n                <td>{name}</td>\n                <td>{formatSeriesNumber(data.price)}</td>\n                <td>{formatSeriesFloat(data.volume)}</td>\n              </TableRow>\n            ))}\n          </tbody>\n        </Table>\n      </Container>\n    );\n  }\n\n  return <div />;\n};\n","import {\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  LineChart,\n  CartesianGrid,\n  Legend,\n} from \"recharts\";\n\nimport {\n  formatSeriesDate,\n  formatSeriesNumber,\n  formatSeriesFloat,\n} from \"utils/chart\";\nimport { DailyAssetPrice, Series } from \"types\";\n\nimport { CustomTooltip } from \"./recharts/CustomTooltip\";\n\nconst DOMAIN = [\"auto\", \"auto\"];\nconst COLOR_PALETTE = [\"#1976d2\", \"#F99B1C\"];\n\nexport type ChartByAssetProps = {\n  series: Series[];\n  seriesKey?: Exclude<keyof DailyAssetPrice, \"date\">;\n};\n\nexport const ChartByAsset: React.FC<ChartByAssetProps> = ({\n  series,\n  seriesKey = \"price\",\n}) => (\n  <ResponsiveContainer>\n    <LineChart>\n      <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n      <XAxis\n        dataKey=\"date\"\n        scale=\"time\"\n        type=\"number\"\n        tickFormatter={formatSeriesDate}\n        domain={DOMAIN}\n      />\n      <YAxis\n        dataKey={seriesKey}\n        type=\"number\"\n        tickFormatter={\n          seriesKey === \"price\" ? formatSeriesNumber : formatSeriesFloat\n        }\n        domain={DOMAIN}\n      />\n      <Tooltip content={<CustomTooltip />} />\n      {series.map((s, index) => {\n        const strokeColor = COLOR_PALETTE[index] || COLOR_PALETTE[0];\n\n        return (\n          <Line\n            type=\"monotone\"\n            dataKey={seriesKey}\n            data={s.data}\n            name={s.label}\n            key={s.label}\n            stroke={strokeColor}\n          />\n        );\n      })}\n      {series.length > 1 && <Legend />}\n    </LineChart>\n  </ResponsiveContainer>\n);\n","import React, { useMemo } from \"react\";\n\nimport { usePortfolioManager } from \"services/PortfolioManager\";\nimport { Loader } from \"components/Loader\";\nimport { ChartByAsset } from \"components/ChartByAsset\";\nimport { Series } from \"types\";\nimport { getChartByAsset } from \"utils\";\n\nexport const Portfolio: React.FC = () => {\n  const { portfolioAssetDayPrice } = usePortfolioManager();\n\n  const chartSeries = useMemo<Series[] | undefined>(\n    () =>\n      portfolioAssetDayPrice && [\n        getChartByAsset(\"TOTAL\", portfolioAssetDayPrice, \"price\"),\n        getChartByAsset(\n          \"TOTAL\",\n          portfolioAssetDayPrice,\n          \"investment\",\n          \"Investments\",\n          false\n        ),\n      ],\n    [portfolioAssetDayPrice]\n  );\n\n  if (!chartSeries) {\n    return <Loader />;\n  }\n\n  return <ChartByAsset series={chartSeries} />;\n};\n","import React from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\n\nimport { usePortfolioManager } from \"services/PortfolioManager\";\nimport { Loader } from \"components/Loader\";\nimport { ChartByAsset } from \"components/ChartByAsset\";\nimport { getChartByAsset } from \"utils\";\n\nexport const Assets: React.FC = () => {\n  const { portfolioAssetDayPrice, uniqueAssets } = usePortfolioManager();\n\n  if (!portfolioAssetDayPrice || !uniqueAssets) {\n    return <Loader />;\n  }\n\n  return (\n    <Grid container height=\"100%\">\n      {uniqueAssets.map((asset) => (\n        <Grid key={asset} item md={6} xs={12} mb={5} height={300}>\n          <Typography variant=\"h5\">{asset}</Typography>\n          <ChartByAsset\n            series={[\n              getChartByAsset(asset, portfolioAssetDayPrice, \"price\"),\n              getChartByAsset(\n                asset,\n                portfolioAssetDayPrice,\n                \"investment\",\n                \"Investments\",\n                false\n              ),\n            ]}\n          />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport { ThemeProvider } from \"@mui/material\";\nimport { Switch, Route, BrowserRouter, Redirect } from \"react-router-dom\";\n\nimport { theme } from \"constants/theme\";\nimport { PAGE_SLUG } from \"constants/app\";\nimport { Dashboard } from \"components/Dashboard\";\nimport { PortfolioRoute } from \"components/PortfolioRoute\";\nimport { PortfolioManager } from \"services/PortfolioManager\";\nimport { Upload, Portfolio, Assets } from \"pages\";\n\nexport const App: React.FC = () => (\n  <BrowserRouter basename=\"/portapp\">\n    <ThemeProvider theme={theme}>\n      <PortfolioManager>\n        <Dashboard>\n          <Switch>\n            <Route exact path={`/${PAGE_SLUG.upload}`}>\n              <Upload />\n            </Route>\n            <PortfolioRoute exact path={`/${PAGE_SLUG.portfolio}`}>\n              <Portfolio />\n            </PortfolioRoute>\n            <PortfolioRoute exact path={`/${PAGE_SLUG.assets}`}>\n              <Assets />\n            </PortfolioRoute>\n            <Redirect to={`/${PAGE_SLUG.portfolio}`} />\n          </Switch>\n        </Dashboard>\n      </PortfolioManager>\n    </ThemeProvider>\n  </BrowserRouter>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}